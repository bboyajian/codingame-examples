import sys
import math

# Auto-generated code below aims at helping you parse
# the standard input according to the problem statement.

surface_n = int(input())  # the number of points used to draw the surface of Mars.
surface = []
for i in range(surface_n):
    # land_x: X coordinate of a surface point. (0 to 6999)
    # land_y: Y coordinate of a surface point. By linking all the points together in a sequential fashion, you form the surface of Mars.
    land_x, land_y = [int(j) for j in input().split()]
    surface.append([land_x, land_y])
for i in range(len(surface)-1):
    if surface[i][1]==surface[i+1][1]:
        landing_height = surface[i][1]
        min_landing = surface[i][0]
        max_landing = surface[i+1][0]
# game loop
while True:
    # h_speed: the horizontal speed (in m/s), can be negative.
    # v_speed: the vertical speed (in m/s), can be negative.
    # fuel: the quantity of remaining fuel in liters.
    # rotate: the rotation angle in degrees (-90 to 90).
    # power: the thrust power (0 to 4).
    x, y, h_speed, v_speed, fuel, rotate, power = [int(i) for i in input().split()]

    # Write an action using print
    # To debug: print("Debug messages...", file=sys.stderr)


    # rotate power. rotate is the desired rotation angle. power is the desired thrust power.
    if v_speed<-35:
        print('0 4')
    elif h_speed<-48 or (h_speed<=48 and x<min_landing) or (h_speed<-1 and min_landing<x<max_landing):
        print('-22 4')
    elif h_speed>48 or (h_speed>=-48 and x>max_landing) or (h_speed>1 and min_landing<x<max_landing):
        print('22 4')
    elif h_speed<-2 or h_speed>2:
        print('0 4')
    else:
        print('0 0')
        
