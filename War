import sys
import math

# Auto-generated code below aims at helping you parse
# the standard input according to the problem statement.
cards = {'2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, '1': 10, 'J': 11, 'Q': 12, 'K': 13, 'A':14}
n = int(input())  # the number of cards for player 1
cardsp_1 = []
for i in range(n):
    cardp_1 = input()  # the n cards of player 1
    cardsp_1.append(cards[cardp_1[0]])
m = int(input())  # the number of cards for player 2
cardsp_2 = []
for i in range(m):
    cardp_2 = input()  # the m cards of player 2
    cardsp_2.append(cards[cardp_2[0]])
rounds = 0
war = 0
activecardsp_1=[]
activecardsp_2=[]
# Write an action using print
# To debug: print("Debug messages...", file=sys.stderr)
while cardsp_1 != [] and cardsp_2 != []:
    activecardsp_1.append(cardsp_1[0])
    activecardsp_2.append(cardsp_2[0])
    del(cardsp_1[0])
    del(cardsp_2[0])
    if activecardsp_1[-1] != activecardsp_2[-1]:
        if activecardsp_1[-1] > activecardsp_2[-1]:
            cardsp_1 = cardsp_1+activecardsp_1+activecardsp_2
        else:
            cardsp_2 = cardsp_2+activecardsp_1+activecardsp_2
        activecardsp_1=[]
        activecardsp_2=[]
        rounds += 1
        war = 0
    else:
        if len(cardsp_1)>2 and len(cardsp_1)>2:
            activecardsp_1 = activecardsp_1+cardsp_1[:3]
            activecardsp_2 = activecardsp_2+cardsp_2[:3]
            del(cardsp_1[:3])
            del(cardsp_2[:3])
        else:
            cardsp_1 = []
        war = 1
if cardsp_1 != [] and war == 0:
    print('1 ' + str(rounds))
elif cardsp_2 != [] and war == 0:
    print('2 ' + str(rounds))
else:
    print("PAT")
