import sys
import math

# Auto-generated code below aims at helping you parse
# the standard input according to the problem statement.

n = int(input())  # the number of relationships of influence
relationships = []
relationships_copy = []
people = {}
for i in range(n):
    # x: a relationship of influence between two people (x influences y)
    x, y = [int(j) for j in input().split()]
    relationships.append([x, y])
    relationships_copy.append([x, y])
    if x not in people.keys():
        people[x] = 0
    if y not in people.keys():
        people[y] = 1
    else:
        people[y] += 1
founders = [x for x in people.keys() if people[x]==0]
ordering = []
while founders != []:
    ordering.append(founders[0])
    del(founders[0])
    for i in range(n):
        if relationships_copy[i][0]==ordering[-1]:
            x = relationships_copy[i][1]
            relationships_copy[i][0]=-1
            relationships_copy[i][1]=-1
            people[x] += -1
            if people[x]==0:
                founders.append(x)
distances = [[x, 1] for x in ordering]
d = len(distances)
for i in range(d):
    for j in range(i, d):
        if [distances[i][0], distances[j][0]] in relationships and distances[i][1]+1>distances[j][1]:
                distances[j][1] = distances[i][1]+1
            
    
# Write an action using print
# To debug: print("Debug messages...", file=sys.stderr)


# The number of people involved in the longest succession of influences
print(max([row[1] for row in distances]))
